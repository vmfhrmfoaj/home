#!/bin/zsh

setup_for_zsh() {
  # Oh My Zsh
  if [ 0 != $(echo $plugins | grep -c 'vi-mode') ]; then
    # NOTE
    #  You should change 'backspace key generates' option to control-h on the Gnome terminal.
    if [ ! -z ${GNOME_TERMINAL_SERVICE} ]; then
      bindkey -M viins '^?' backward-kill-word
    fi
    bindkey -M viins '^b' backward-char
    bindkey -M viins '^f' forward-char
    bindkey -M viins '^d' delete-char
  fi

  # autocomplete
  local plugin_dir="${HOME}/.oh-my-zsh/custom/plugins"
  if [ ! -f "${plugin_dir}/openssl/_openssl" ]; then
      mkdir -p "${plugin_dir}/openssl/"
      curl -fsSL -o "${plugin_dir}/openssl/_openssl" \
          'https://raw.githubusercontent.com/zsh-users/zsh-completions/master/src/_openssl'
  fi
  if [ ! -f "${plugin_dir}/perlbrew/_perlbrew" ]; then
    mkdir -p "${plugin_dir}/perlbrew/"
    curl -fsSL -o "${plugin_dir}/perlbrew/_perlbrew" \
          'https://gist.githubusercontent.com/vmfhrmfoaj/5d638cca74fa0c4ea0420457cae831b2/raw/3eb92bee4b2efa4508cbaea91b80bafd6d6c5f0c/_perlbrew'
  fi
  if [ ! -f "${plugin_dir}/vboxmanage/_vboxmanage" ]; then
      mkdir -p "${plugin_dir}/vboxmanage/"
      curl -fsSL -o "${plugin_dir}/vboxmanage/_vboxmanage" \
          'https://raw.githubusercontent.com/zsh-users/zsh-completions/master/src/_virtualbox'
  fi

  local NEWLINE=$'\n'
  local PS1_PREFIX='%{$fg[magenta]%}(%n@%M)%{$reset_color%}'
  export PS1="${PS1_PREFIX}${NEWLINE}${PS1}"
}

_is_ssh_agent_running() {
  if [ ! -z ${SSH_AGENT_PID} ] && [ 0 != $(ps -o cmd= -q ${SSH_AGENT_PID} | grep -c 'ssh-agent') ] && \
     [ ! -z ${SSH_AUTH_SOCK} ] && [ -S ${SSH_AUTH_SOCK} ]; then
    echo 'OK'
    return 0
  else
    echo 'NO'
    return 255
  fi
}


zle-keymap-select() {
  local CURSOR_BOX='\e[2 q'
  local CURSOR_UNDERBAR='\e[4 q'
  local CURSOR_LINE='\e[6 q'

  if [[ "$TERM" = *"xterm"* ]]; then
    if [ "$KEYMAP" = vicmd ]; then
      # the command mode for vi
      echo -ne $CURSOR_BOX
    else
      # the insert mode for vi
      echo -ne $CURSOR_LINE
    fi
  fi
  # for Oh My Zsh
  zle reset-prompt
  zle -R
}

title() {
  emulate -L zsh
  setopt prompt_subst
  [[ "$EMACS" == *term* ]] && return
  : ${2=$1}
  case "$TERM" in
    cygwin | xterm* | putty* | rxvt* | ansi)
      print -Pn "\e]2;$2:q\a"
      print -Pn "\e]1;$1:q\a"
      ;;
    screen*)
      print -Pn "\e]2;(S) $2:q\a"
      print -Pn "\e]1;(S) $1:q\a"
      print -Pn "\ek$1\e\\"
      ;;
    tmux*)
      print -Pn "\ek$1:q\e\\"
      ;;
    *)
      if [[ -n "$terminfo[fsl]" ]] && [[ -n "$terminfo[tsl]" ]]; then
        echoti tsl
        print -Pn "$1"
        echoti fsl
      fi
      ;;
  esac
}

precmd() {
  local TABNAME="%n@%M: %~"
  title $TABNAME $TABNAME
}

preexec() {
  local CURSOR_BOX='\e[2 q'
  local CURSOR_UNDERBAR='\e[4 q'
  local CURSOR_LINE='\e[6 q'
  local TABNAME="${2:gs/%/%%}"
  title $TABNAME $TABNAME
  echo -ne $CURSOR_LINE
}

postexec() {
  local TABNAME="%n@%M"
  title $TABNAME $TABNAME
}

setup_for_zsh
zle -N zle-keymap-select
export DISABLE_AUTO_TITLE="true"
preexec
