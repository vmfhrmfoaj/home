#!/bin/zsh

_setup_for_zsh() {
    if [ -n "$(echo "${plugins}" | grep 'vi-mode')" ]; then
        # NOTE
        #  See https://wiki.archlinux.org/index.php/Zsh#Key_bindings
        bindkey -M vicmd "${terminfo[khome]}" beginning-of-line
        bindkey -M viins "${terminfo[khome]}" beginning-of-line
        bindkey -M viins "${terminfo[kend]}" end-of-line
        bindkey -M vicmd "${terminfo[kend]}" end-of-line
        bindkey -M viins '^b' backward-char
        bindkey -M viins '^f' forward-char
    fi

    local NEWLINE=$'\n'
    local PS1_PREFIX='%{$fg[magenta]%}(%n@%M)%{$reset_color%}'
    export PS1="${PS1_PREFIX}${NEWLINE}${PS1}"
}

zle-keymap-select() {
    if [[ "${TERM}" = screen* ]]; then
        local CURSOR_BOX='\eP\e[2 q\e\\'
        local CURSOR_UNDERBAR='\eP\e[4 q\e\\'
        local CURSOR_LINE='\eP\e[6 q\e\\'
    else
        local CURSOR_BOX='\e[2 q'
        local CURSOR_UNDERBAR='\e[4 q'
        local CURSOR_LINE='\e[6 q'
    fi

    if [[ "$TERM" = *"xterm"* ]] || [[ "$TERM" = "screen"* ]]; then
        if [ "$KEYMAP" = vicmd ]; then
            # the command mode for vi
            echo -ne $CURSOR_BOX
        else
            # the insert mode for vi
            echo -ne $CURSOR_LINE
        fi
    fi
    # for Oh My Zsh
    zle reset-prompt
    zle -R
}

title() {
    emulate -L zsh
    setopt prompt_subst
    [[ "$EMACS" == *term* ]] && return
    : ${2=$1}
    local prefix=''
    if [ -n "${SCHROOT_CHROOT_NAME}" ]; then
        prefix="C${prefix}"
    fi
    if [[ "$TERM" = "screen"* ]]; then
        prefix="S${prefix}"
    fi
    if [ -n "${prefix}" ]; then
        prefix="(${prefix}) "
    fi
    case "$TERM" in
        cygwin | xterm* | putty* | rxvt* | ansi)
            print -Pn "\e]2;${prefix}$2:q\a"
            print -Pn "\e]1;${prefix}$1:q\a"
            ;;
        screen*)
            print -Pn "\e]2;${prefix}$2:q\a"
            print -Pn "\e]1;${prefix}$1:q\a"
            print -Pn "\ek$1\e\\"
            ;;
        tmux*)
            print -Pn "\ek$1:q\e\\"
            ;;
        *)
            if [[ -n "$terminfo[fsl]" ]] && [[ -n "$terminfo[tsl]" ]]; then
                echoti tsl
                print -Pn "$1"
                echoti fsl
            fi
            ;;
    esac
}

precmd() {
    local TABNAME="%n@%M: %~"
    title $TABNAME $TABNAME
}

preexec() {
    if [[ "${TERM}" = screen* ]]; then
        local CURSOR_BOX='\eP\e[2 q\e\\'
        local CURSOR_UNDERBAR='\eP\e[4 q\e\\'
        local CURSOR_LINE='\eP\e[6 q\e\\'
    else
        local CURSOR_BOX='\e[2 q'
        local CURSOR_UNDERBAR='\e[4 q'
        local CURSOR_LINE='\e[6 q'
    fi
    local TABNAME="${2:gs/%/%%}"
    title $TABNAME $TABNAME
    echo -ne $CURSOR_LINE
}

postexec() {
    local TABNAME="%n@%M"
    title $TABNAME $TABNAME
}

# Workaround to fix an error of systemctl completion
#  copied from https://github.com/ohmyzsh/ohmyzsh/issues/8751#issuecomment-616009741
_systemctl_unit_state() {
    typeset -gA _sys_unit_state
    _sys_unit_state=( $(__systemctl list-unit-files "$PREFIX*" | awk '{print $1, $2}') )
}

_setup_for_zsh
zle -N zle-keymap-select
export DISABLE_AUTO_TITLE="true"
preexec
