// Place your key bindings in this file to override the defaults
[
   // Escape
   {
     "key": "ctrl+[",
     "command": "workbench.action.hideInterfaceOverview",
     "when": "interfaceOverviewVisible"
   },
   {
      "key": "ctrl+[",
      "command": "workbench.action.terminal.clearSelection",
      "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible"
   },
   {
      "key": "ctrl+[",
      "command": "workbench.action.terminal.hideFindWidget",
      "when": "terminalFindWidgetVisible && terminalFocus"
   },
   {
      "key": "ctrl+[",
      "command": "breadcrumbs.selectEditor",
      "when": "breadcrumbsActive && breadcrumbsVisible"
   },
   //  {
   //      "key": "ctrl+[",
   //      "command": "cancelRenameInput",
   //      "when": "editorFocus && renameInputVisible"
   //  },
   //  {
   //      "key": "ctrl+[",
   //      "command": "cancelSelection",
   //      "when": "editorHasSelection && textInputFocus"
   //  },
   {
      "key": "ctrl+[",
      "command": "closeAccessibilityHelp",
      "when": "accessibilityHelpWidgetVisible && editorFocus"
   },
   {
      "key": "ctrl+[",
      "command": "closeBreakpointWidget",
      "when": "breakpointWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+[",
      "command": "closeDirtyDiff",
      "when": "dirtyDiffVisible"
   },
   // {
   //     "key": "ctrl+[",
   //     "command": "closeFindWidget",
   //     "when": "editorFocus && findWidgetVisible"
   // },
   // {
   //     "key": "ctrl+[",
   //     "command": "closeMarkersNavigation",
   //     "when": "editorFocus && markersNavigationVisible"
   // },
   // {
   //     "key": "ctrl+[",
   //     "command": "closeParameterHints",
   //     "when": "editorFocus && parameterHintsVisible"
   // },
   {
      "key": "ctrl+[",
      "command": "closeReferenceSearch",
      "when": "referenceSearchVisible && !config.editor.stablePeek"
   },
   {
      "key": "ctrl+[",
      "command": "closeReferenceSearchEditor",
      "when": "inReferenceSearchEditor && !config.editor.stablePeek"
   },
   {
      "key": "ctrl+[",
      "command": "closeReplaceInFilesWidget",
      "when": "replaceInputBoxFocus && searchViewletVisible"
   },
   {
      "key": "ctrl+[",
      "command": "editor.action.webvieweditor.hideFind",
      "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
   },
   {
      "key": "ctrl+[",
      "command": "editor.closeCallHierarchy",
      "when": "callHierarchyVisible && !config.editor.stablePeek"
   },
   {
      "key": "ctrl+[",
      "command": "filesExplorer.cancelCut",
      "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
   },
   // {
   //    "key": "ctrl+[",
   //    "command": "hideSuggestWidget",
   //    "when": "suggestWidgetVisible && textInputFocus"
   // },
   {
      "key": "ctrl+[",
      "command": "keybindings.editor.clearSearchResults",
      "when": "inKeybindings && inKeybindingsSearch"
   },
   {
      "key": "ctrl+[",
      "command": "leaveEditorMessage",
      "when": "messageVisible"
   },
   // {
   //     "key": "ctrl+[",
   //     "command": "leaveSnippet",
   //     "when": "editorTextFocus && inSnippetMode"
   // },
   {
      "key": "ctrl+[",
      "command": "list.clear",
      "when": "listFocus && listHasSelectionOrFocus && !inputFocus && !referenceSearchVisible"
   },
   {
      "key": "ctrl+[",
      "command": "notifications.hideList",
      "when": "notificationCenterVisible"
   },
   {
      "key": "ctrl+[",
      "command": "notifications.hideToasts",
      "when": "notificationToastsVisible"
   },
   // {
   //    "key": "ctrl+[",
   //    "command": "removeSecondaryCursors",
   //    "when": "editorHasMultipleSelections && textInputFocus"
   // },
   {
      "key": "ctrl+[",
      "command": "search.action.cancel",
      "when": "listFocus && searchViewletVisible && !inputFocus && !referenceSearchVisible"
   },
   {
      "key": "ctrl+[",
      "command": "settings.action.clearSearchResults",
      "when": "inSettingsSearch"
   },
   {
      "key": "ctrl+[",
      "command": "workbench.action.closeQuickOpen",
      "when": "inQuickOpen"
   },

   // Indentation
   {
      "key": "ctrl+.",
      "command": "editor.action.indentLines",
      "when": "textInputFocus && !editorReadonly && vim.mode == 'Insert'"
   },

   // Up/Down
   {
      "key": "down",
      "command": "search.action.focusNextSearchResult",
      "when": "hasSearchResult && searchViewletFocus"
   },
   {
      "key": "up",
      "command": "search.action.focusPreviousSearchResult",
      "when": "hasSearchResult && searchViewletFocus"
   },

   // Emacs keybinding
   {
      "key": "ctrl+h",
      "command": "deleteLeft",
      "when": "textInputFocus && !editorReadonly && vim.mode == 'Insert'"
   },
   {
      "key": "ctrl+h",
      "command": "-editor.action.startFindReplaceAction"
   },

   // Enter
   {
      "key": "enter",
      "command": "-acceptSelectedSuggestionOnEnter",
      "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
   },

   // Tab
   {
      "key": "tab",
      "command": "tab",
      "when": "editorTextFocus && !editorReadonly && vim.mode == 'Insert' && !suggestWidgetVisible"
   },

   // Toggle
   {
      "key": "alt+j",
      "command": "workbench.action.toggleSidebarVisibility",
   },
]