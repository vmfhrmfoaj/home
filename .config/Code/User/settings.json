{
    // Appearance
    "editor.fontFamily": "'Cascadia Code', monospace",
    "editor.fontSize": 14,
    "editor.fontLigatures": true,
    "editor.matchBrackets": "near", // use Bracket Pair Colorizer
    "editor.minimap.enabled": false,
    "editor.minimap.renderCharacters": false,
    "editor.minimap.showSlider": "always",
    "editor.overviewRulerBorder": false, // true, if minimap is enabled
    "editor.quickSuggestions": true,
    // NOTE:
    //  The minimap can't not cover whole page if file is longer than 200 line on my screen.
    //  So, the minimap is not perfect alternative for the scrollbar.
    // "editor.scrollbar.verticalScrollbarSize": 0,
    "editor.rulers": [ 120 ],
    "editor.renderLineHighlight": "none",
    "editor.renderWhitespace": "selection",
    "editor.wordWrapColumn": 165,
    "scm.diffDecorations": "gutter",
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.fontWeightBold": "600",
    "terminal.integrated.lineHeight": 1.1,
    "window.titleBarStyle": "native",
    "window.menuBarVisibility": "toggle",
    "window.newWindowDimensions": "maximized",
    "window.zoomLevel": 0,
    "workbench.colorTheme": "Visual Studio Dark",
    "workbench.colorCustomizations": {
        "[Visual Studio Dark]": {
            "editor.findMatchBackground": "#ea5c0090",
            "editorCursor.foreground": "#ffffff85",
            "editorCursor.background": "#333",
            "editor.lineHighlightBackground": "#1073cf2d",
            "editor.lineHighlightBorder": "#9fced11f",
            "editorRuler.foreground": "#5a5a5a20",
            "statusBar.foreground": "#ccc",
            "statusBar.background": "#333",
            "statusBar.noFolderBackground": "#333",
            "statusBar.noFolderBorder": "#333",
            "statusBarItem.remoteBackground": "#333",
            "tab.activeBackground": "#42414d",
            "titleBar.activeBackground": "#333",
        },
    },
    "workbench.iconTheme": "material-icon-theme",
    "workbench.productIconTheme": "material-product-icons",
    "workbench.startupEditor": "none",
    "workbench.sideBar.location": "left",

    "editor.semanticTokenColorCustomizations": {
        "rules": {
            "*.mutable": { "underline": true, },
            "*.unsafe": {
                "bold": true,
                "italic": true,
            },
        },
        "[Visual Studio Dark]": {
            "rules": {
                "angle": "#909090",
                "attribute": "#a9a9a9",
                "brace": "#909090",
                "colon": "#909090",
                "comma": "#909090",
                "enum": "#d4d4d4",
                "enumMember": "#d4d4d4",
                "interface": "#d4d4d4",
                "lifetime": "#a9a9a9",
                "macro": "#d4d4d4",
                "operator": "#a9a9a9",
                "parenthesis": "#909090",
                "punctuation": "#909090",
                "semicolon": "#909090",
                "type": "#d4d4d4",
                "typeAlias": "#d4d4d4",
                "typeParameter": "#d4d4d4",
            },
        },
    },

    "editor.tokenColorCustomizations": {
        "textMateRules": [
            {
                "scope": "constant.other.placeholder.c",
                "settings": { "foreground": "#569cd6" }
            },
        ],
        "[Visual Studio Dark]": {
            "keywords": "#c586c0",
            "comments": {
                "foreground": "#909090",
                "fontStyle": "italic"
            },
            "textMateRules": [
                {
                    "scope": "entity.name.section.spec",
                    "settings": { "foreground": "#c586c0" },
                },
                {
                    "scope": [
                        // Python
                        "keyword.codetag.notation.python"
                    ],
                    "settings": {
                        "foreground": "#909090",
                    }
                },
                {
                    "scope": [
                        // C
                        "storage.type.built-in.primitive.c",
                    ],
                    "settings": { "foreground": "#4ec9b0", }
                },
                {
                    "scope": [
                        "constant.language",
                        // Python
                        "storage.type.number.python",
                        "constant.language.python",
                        // Go
                        "constant.language.go",
                        // Json
                        "constant.language.json.comments",
                        // PHP
                        "constant.language.php",
                    ],
                    "settings": {
                        "foreground": "#b5cea8",
                    }
                },
                {
                    "scope": [
                        "storage.type",
                        // C/C++
                        "keyword.control.directive.define.c",
                        "keyword.control.directive.include.c",
                        // Python
                        "keyword.control.import.python",
                    ],
                    "settings": { "foreground": "#569cd6" },
                },
                {
                    "scope": [
                        "entity.name.function.preprocessor",
                        // PHP
                        "variable.language.special.self.python",
                        "storage.type.boolean.go",
                        "storage.type.error.go",
                        "storage.type.numeric.go",
                        "storage.type.string.go",
                        "support.type.property-name.json.comments",
                        // Toml
                        "keyword.key.toml",
                        // Json
                        "support.type.property-name.json",
                    ],
                    "settings": { "foreground": "#d4d4d4", }
                },
                {
                    "scope": [
                        "keyword.operator",
                        // C/C++
                        "punctuation.separator.dot-access.c",
                        "punctuation.separator.delimiter.c",
                        "punctuation.separator.pointer-access.c",
                        "punctuation.separator.pointer-access.cpp",
                        // Shell
                        "keyword.operator.list.shell",
                        "keyword.operator.pipe.shell",
                        "keyword.operator.redirect.shell",
                        "keyword.operator.heredoc.shell",
                        // Go
                        "punctuation.other.comma.go",
                        "punctuation.other.colon.go",
                        "punctuation.other.period.go",
                        "punctuation.terminator.go",
                        "keyword.operator.logical.go",
                        // Ptyhon
                        "punctuation.separator.period.python",
                        // Toml
                        "punctuation.eq.toml",
                    ],
                    "settings": { "foreground": "#a9a9a9" },
                },
                {
                    "scope": [
                        // C/C++
                        "meta.preprocessor.conditional.cpp",
                        "punctuation.definition.begin.bracket.square.c",
                        "punctuation.definition.end.bracket.square.c",
                        "punctuation.definition.parameters.begin.preprocessor.cpp",
                        "punctuation.definition.parameters.end.preprocessor.cpp",
                        "punctuation.section.arguments.begin.bracket.round.c",
                        "punctuation.section.arguments.end.bracket.round.c",
                        "punctuation.section.arguments.begin.bracket.round.initializer.cpp",
                        "punctuation.section.arguments.end.bracket.round.initializer.cpp",
                        "punctuation.section.block.begin.bracket.curly.c",
                        "punctuation.section.block.end.bracket.curly.c",
                        "punctuation.section.parens.begin.bracket.round.c",
                        "punctuation.section.parens.end.bracket.round.c",
                        "punctuation.section.parens.begin.bracket.round.cpp",
                        "punctuation.section.parens.end.bracket.round.cpp",
                        "punctuation.section.parens.begin.bracket.round.function.pointer.cpp",
                        "punctuation.section.parens.end.bracket.round.function.pointer.cpp",
                        "punctuation.section.parameters.begin.bracket.round.c",
                        "punctuation.section.parameters.end.bracket.round.c",
                        "punctuation.section.parameters.begin.bracket.round.cpp",
                        "punctuation.section.parameters.end.bracket.round.cpp",
                        "punctuation.section.parameters.begin.bracket.round.function.pointer.cpp",
                        "punctuation.section.parameters.end.bracket.round.function.pointer.cpp",
                        "punctuation.terminator.statement.c",
                        "punctuation.terminator.statement.cpp",
                        // Shell
                        "punctuation.definition.variable.shell",
                        "punctuation.definition.group.shell",
                        "punctuation.definition.arguments.shell",
                        "punctuation.definition.logical-expression.shell",
                        "punctuation.definition.subshell.shell",
                        // Go
                        "punctuation.definition.begin.bracket.curly.go",
                        "punctuation.definition.end.bracket.curly.go",
                        "punctuation.definition.begin.bracket.round.go",
                        "punctuation.definition.end.bracket.round.go",
                        "punctuation.definition.bracket.square.go",
                        "punctuation.other.comma.go",
                        "punctuation.terminator.go",
                        // Python
                        "punctuation.definition.arguments.begin.python",
                        "punctuation.definition.arguments.end.python",
                        "punctuation.definition.dict.begin.python",
                        "punctuation.definition.dict.end.python",
                        "punctuation.definition.list.begin.python",
                        "punctuation.definition.list.end.python",
                        "punctuation.definition.parameters.begin.python",
                        "punctuation.definition.parameters.end.python",
                        "punctuation.parenthesis.begin.python",
                        "punctuation.parenthesis.end.python",
                        "punctuation.section.class.begin.python",
                        "punctuation.section.function.begin.python",
                        "punctuation.separator.arguments.python",
                        "punctuation.separator.colon.python",
                        "punctuation.separator.continuation.line.python",
                        "punctuation.separator.dict.python",
                        "punctuation.separator.element.python",
                        "punctuation.separator.parameters.python",
                        "punctuation.separator.slice.python",
                        "meta.function.decorator.python",
                        // PHP
                        "punctuation.definition.begin.bracket.curly.php",
                        "punctuation.definition.end.bracket.curly.php",
                        "punctuation.definition.begin.bracket.round.php",
                        "punctuation.definition.end.bracket.round.php",
                        "punctuation.definition.arguments.begin.bracket.round.php",
                        "punctuation.definition.arguments.end.bracket.round.php",
                        "punctuation.definition.array.begin.bracket.round.php",
                        "punctuation.definition.array.end.bracket.round.php",
                        "punctuation.definition.parameters.begin.bracket.round.php",
                        "punctuation.definition.parameters.end.bracket.round.php",
                        "punctuation.definition.variable.php",
                        "punctuation.separator.delimiter.php",
                        "punctuation.terminator.expression.php",
                        "punctuation.terminator.statement.php",
                        "punctuation.section.array.begin.php",
                        "punctuation.section.array.end.php",
                        "storage.modifier.reference.php",
                        // JSON
                        "punctuation.definition.array.begin.json",
                        "punctuation.definition.array.end.json",
                        "punctuation.definition.dictionary.begin.json",
                        "punctuation.definition.dictionary.end.json",
                        "punctuation.separator.array.json",
                        "punctuation.separator.dictionary.pair.json",
                        "punctuation.separator.dictionary.key-value.json",
                        "punctuation.support.type.property-name.begin.json",
                        "punctuation.support.type.property-name.end.json",
                        // Rust
                        "punctuation.semi.rust",
                        // Toml
                        "punctuation.separator.array.toml",
                        "punctuation.separator.dot",
                        "punctuation.definition.table.inline.toml",
                        // YAML
                        "punctuation.separator.key-value.mapping.yaml",
                        // Shellscript
                        "punctuation.terminator.case-clause.shell",
                        "punctuation.definition.case-pattern.shell",
                        // Perl
                        "punctuation.separator.comma.perl",
                        "punctuation.definition.variable.perl",
                        "punctuation.terminator.statement.perl",
                    ],
                    "settings": { "foreground": "#909090", }
                },
                {
                    "scope": "storage.type.built-in.primitive.c",
                    "settings": { "foreground": "#4ec9b0", }
                },
                {
                    "scope": "string.interpolated.dollar.shell",
                    "settings": { "foreground": "#d16969", }
                },
            ]
        },
    },

    // Edit
    "breadcrumbs.enabled": true,
    "editor.accessibilitySupport": "off",
    "editor.detectIndentation": false,
    "editor.formatOnSave": false,
    "editor.insertSpaces": true,
    "editor.lineNumbers": "relative",
    "editor.snippetSuggestions": "top",
    "editor.suggestOnTriggerCharacters": true,
    "editor.suggestSelection": "first",
    "editor.tabSize": 4,
    "search.mode": "newEditor",
    "window.restoreWindows": "none",
    "workbench.editor.enablePreview": false,

    "[go]": {
        "editor.formatOnSave": true,
    },
    "[rust]": {
        "editor.formatOnSave": true,
    },

    // Misc.
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "telemetry.enableTelemetry": false,
    "terminal.integrated.commandsToSkipShell": [
        "multiCommand.switchFirstTermianl",
        "multiCommand.switchSecondTermianl",
        "multiCommand.switchThirdTermianl",
        "-workbench.action.quickOpen",
    ],
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },

    // Bash IDE
    "bashIde.highlightParsingErrors": false,

    // Better Comment
    "better-comments.tags": [
        {
            "tag": "fixme",
            "color": "#cc2400",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
        {
            "tag": "xxx",
            "color": "#cc2400",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
        {
            "tag": "note",
            "color": "#8cc6e4",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
        {
            "tag": "todo",
            "color": "#cc7000",
            "strikethrough": false,
            "underline": false,
            "backgroundColor": "transparent",
            "bold": false,
            "italic": false
        },
    ],

    // Bracket Pair Colorizer
    "bracket-pair-colorizer-2.colors": [
        "#909090",
    ],
    "bracket-pair-colorizer-2.scopeLineCSS": [
        "borderStyle : solid",
        "borderWidth : 1px",
        "borderColor : #707070",
        "opacity: 1"
    ],
    // "bracket-pair-colorizer-2.excludedLanguages": [
    //     "shellscript",
    // ],

    // C/C++
    "C_Cpp.enhancedColorization": "Enabled",
    "C_Cpp.intelliSenseEngine": "Default",
    "C_Cpp.updateChannel": "Default",

    // CMake
    "cmake.configureOnOpen": true,

    // Git
    "git.allowForcePush": true,

    // Gitlens
    "gitlens.codeLens.enabled": false,
    "gitlens.currentLine.enabled": false,
    "gitlens.keymap": "none",
    "gitlens.statusBar.enabled": false,
    "gitlens.statusBar.format": "${author}(${agoOrDate}): \"${message}\"",

    // Go
    "go.toolsManagement.autoUpdate": true,

    // Markdownlint
    "markdownlint.config": {
        "MD024": false,
        "MD033": false,
    },

    // multi-command
    "multiCommand.commands": [
        {
            "command": "multiCommand.vimFindInFiles",
            "sequence": [
                "extension.vim_escape",
                "workbench.action.findInFiles",
            ]
        },
        {
            "command": "multiCommand.vimSelectedSuggestionAndEscape",
            "sequence": [
                "acceptSelectedSuggestionOnEnter",
                "extension.vim_escape",
            ]
        },
        {
            "command": "multiCommand.vimCancelSuggestionAndEscape",
            "sequence": [
                "hideSuggestWidget",
                "extension.vim_escape",
            ]
        },
        {
            "command": "multiCommand.vimPreviousEditor",
            "sequence": [
                "extension.vim_escape",
                "workbench.action.previousEditor",
            ]
        },
        {
            "command": "multiCommand.vimNextEditor",
            "sequence": [
                "extension.vim_escape",
                "workbench.action.nextEditor",
            ]
        },
        {
            "command": "multiCommand.vimQuickOpen",
            "sequence": [
                "extension.vim_escape",
                "workbench.action.quickOpen",
            ]
        },
        {
            "command": "multiCommand.vimShowCommand",
            "sequence": [
                "extension.vim_escape",
                "workbench.action.showCommands",
            ]
        },
        {
            "command": "multiCommand.vimFocusFirstEditorGroupAndEscape",
            "sequence": [
                "workbench.action.focusFirstEditorGroup",
                "extension.vim_escape"
            ]
        },
        {
            "command": "multiCommand.vimOpenResultAndEscape",
            "sequence": [
                "search.action.openResult",
                "extension.vim_escape"
            ]
        },
        {
            "command": "multiCommand.vimMarkAndFind",
            "sequence": [
                {"command": "type", "args": {"text": "m"}},
                {"command": "type", "args": {"text": "z"}},
                "actions.find",
            ]
        },
        {
            "command": "multiCommand.vimCloseFindWidget",
            "interval": 0.05,
            "sequence": [
                "closeFindWidget",
                "cancelSelection",
                "extension.vim_escape",
                {"command": "type", "args": {"text": "q"}},
                {"command": "type", "args": {"text": "z"}},
                {"command": "type", "args": {"text": "q"}},
            ]
        },
        {
            "command": "multiCommand.vimCloseFindWidgetAndGoBack",
            "interval": 0.05,
            "sequence": [
                "closeFindWidget",
                "cancelSelection",
                "extension.vim_escape",
                {"command": "type", "args": {"text": "`"}},
                {"command": "type", "args": {"text": "z"}},
                {"command": "type", "args": {"text": "q"}},
                {"command": "type", "args": {"text": "z"}},
                {"command": "type", "args": {"text": "q"}},
            ]
        },
        {
            "command": "multiCommand.revealReferenceAndHide",
            "sequence": [
                "revealReference",
                "closeReferenceSearch",
                "extension.vim_escape",
            ]
        },
        {
            "command": "multiCommand.goNextChangeAndShow",
            "sequence": [
                "workbench.action.editor.nextChange",
                "editor.action.dirtydiff.next",
            ]
        },
        {
            "command": "multiCommand.goPreviousChangeAndShow",
            "sequence": [
                "workbench.action.editor.previousChange",
                "editor.action.dirtydiff.previous",
            ]
        },
        {
            "command": "multiCommand.cancelSuggestionAndInsertNewline",
            "sequence": [
                "hideSuggestWidget",
                {"command": "type", "args": {"text": "\n" }},
            ]
        },
        {
            "command": "multiCommand.vimFocusNextAndEscape",
            "sequence": [
                "cursorEnd",
                "search.action.focusNextSearchResult",
                "cancelSelection",
                "extension.vim_escape",
            ]
        },
        {
            "command": "multiCommand.vimFocusPrevAndEscape",
            "sequence": [
                "cursorHome",
                "search.action.focusPreviousSearchResult",
                "cancelSelection",
                "extension.vim_escape",
            ]
        },
        {
            "command": "multiCommand.closeGitBlameAndShowSidebar",
            "sequence": [
                "gitlens.key.escape",
                "workbench.action.focusSideBar",
                "workbench.action.focusActiveEditorGroup",
            ]
        },
        {
            "command": "multiCommand.goParentSymbol",
            "sequence": [
                "breadcrumbs.focusAndSelect",
                "list.collapse",
            ]
        },
        {
            "command": "multiCommand.goNextSymbol",
            "sequence": [
                "breadcrumbs.focusAndSelect",
                "list.focusDown",
            ]
        },
        {
            "command": "multiCommand.goPrevSymbol",
            "sequence": [
                "breadcrumbs.focusAndSelect",
                "list.focusUp",
            ]
        },
        {
            "command": "multiCommand.switchFirstTermianl",
            "sequence": [
                { "command": "workbench.action.quickOpen", "args": "term 1.:" },
                "workbench.action.acceptSelectedQuickOpenItem",
            ]
        },
        {
            "command": "multiCommand.switchSecondTermianl",
            "sequence": [
                { "command": "workbench.action.quickOpen", "args": "term 2.:" },
                "workbench.action.acceptSelectedQuickOpenItem",
            ]
        },
        {
            "command": "multiCommand.switchThirdTermianl",
            "sequence": [
                { "command": "workbench.action.quickOpen", "args": "term 3.:" },
                "workbench.action.acceptSelectedQuickOpenItem",
            ]
        },
        {
            "command": "multiCommand.findInCurDir",
            "sequence": [
                "workbench.view.explorer",
                "filesExplorer.findInFolder"
            ]
        },
    ],

    // Perl
    "perl-toolbox.lint.severity": "stern",

    // Python
    "python.languageServer": "Pylance",
    "python.linting.pylintEnabled": true,
    "python.showStartPage": false,

    // Remote Development
    "remote.SSH.showLoginTerminal": true,

    // Rust Analyzer
    "rust-analyzer.checkOnSave.command": "clippy",

    // Vim
    "workbench.list.keyboardNavigation": "simple", // see, https://github.com/Microsoft/vscode/issues/66995#issuecomment-457123611
    "vim.sneak": true,
    "vim.camelCaseMotion.enable": true,
    "vim.sneakUseIgnorecaseAndSmartcase": true,
    "vim.incsearch": true,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.highlightedyank.enable": true,
    "vim.surround": true,
    "vim.visualstar": true,
    "vim.leader": "<space>",
    "vim.handleKeys": {
        "<C-p>": false,
        "<C-w>": false,
        "<C-z>": false,
    },
    "vim.insertModeKeyBindingsNonRecursive": [
        {
            "before": [ "<C-h>" ],
            "commands": [ { "command": "deleteLeft" } ]
        },
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [ "<C-i>" ],
            "commands": [ { "command": "workbench.action.navigateForward" } ]
        },
        {
            "before": [ "<C-o>" ],
            "commands": [ { "command": "workbench.action.navigateBack" } ]
        },
        {
            "before": [ "<C-r>" ],
            "commands": [ { "command": "redo" } ]
        },
        {
            "before": [ "#" ],
            "commands": []
        },
        {
            "before": [ "*" ],
            "commands": []
        },
        {
            "before": [ "-" ],
            "commands": [
                { "command": "git.unstageSelectedRanges" },
                { "command": "extension.vim_escape" }
             ]
        },
        {
            "before": [ "=" ],
            "commands": [
                { "command": "git.stageSelectedRanges" },
                { "command": "extension.vim_escape" }
             ]
        },
        {
            "before": [ "/" ],
            "commands": [ { "command": "multiCommand.vimMarkAndFind" } ]
        },
        {
            "before": [ "," ],
            "commands": [ { "command": "editor.action.smartSelect.shrink" } ]
        },
        {
            "before": [ "." ],
            "commands": [ { "command": "editor.action.smartSelect.expand" } ]
        },
        {
            "before": [ "N" ],
            "commands": [ { "command": "editor.action.previousMatchFindAction" } ]
        },
        {
            "before": [ "n" ],
            "commands": [ { "command": "editor.action.nextMatchFindAction" } ]
        },
        {
            "before": [
                "g",
                ";"
            ],
            "commands": [ { "command": "workbench.action.navigateToLastEditLocation" } ]
        },
        {
            "before": [
                "g",
                "B"
            ],
            "commands": [ { "command": "editor.action.selectHighlights" } ]
        },
        {
            "before": [
                "g",
                "D"
            ],
            "commands": [ { "command": "editor.action.referenceSearch.trigger" } ]
        },
        {
            "before": [
                "g",
                "d",
            ],
            "commands": [ { "command": "editor.action.revealDefinition" } ]
        },
        {
            "before": [
                "g",
                "J",
            ],
            "commands": [ { "command": "editor.action.moveLinesDownAction" } ]
        },
        {
            "before": [
                "g",
                "K",
            ],
            "commands": [ { "command": "editor.action.moveLinesUpAction" } ]
        },
        {
            "before": [
                "<leader>",
                ";"
            ],
            "commands": [
                { "command": "editor.action.commentLine" },
                { "command": "extension.vim_escape" }
            ]
        },
        // NOTE: has been occupied by Vim extension
        // {
        //     "before": [
        //         "<leader>",
        //         "b",
        //     ],
        // },
        {
            "before": [
                "<leader>",
                "s",
                "f"
            ],
            "commands": [ { "command": "multiCommand.findInCurDir" } ]
        },
        {
            "before": [
                "<leader>",
                "s",
                "p"
            ],
            "commands": [ { "command": "workbench.action.findInFiles" } ] // search.action.openNewEditor
        },
        // NOTE: has been occupied by Vim extension
        // {
        //     "before": [
        //         "<leader>",
        //         "w",
        //     ],
        // },
        {
            "before": [
                "<leader>",
                "x",
                "f"
            ],
            "commands": [
                { "command": "editor.action.formatSelection" },
                { "command": "cancelSelection" },
                { "command": "extension.vim_escape" }
            ]
        },
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [ "<C-i>" ],
            "commands": [ { "command": "workbench.action.navigateForward" } ]
        },
        {
            "before": [ "<C-o>" ],
            "commands": [ { "command": "workbench.action.navigateBack" } ]
        },
        {
            "before": [ "<C-r>" ],
            "commands": [ { "command": "redo" } ]
        },
        {
            "before": [ "#" ],
            "commands": [ { "command": "editor.action.wordHighlight.prev" } ]
        },
        {
            "before": [ "*" ],
            "commands": [ { "command": "editor.action.wordHighlight.next" } ]
        },
        {
            "before": [ "/" ],
            "commands": [ { "command": "multiCommand.vimMarkAndFind" } ]
        },
        {
            "before": [
                "K",
            ],
            "commands": [ { "command": "editor.action.showDefinitionPreviewHover" } ]
        },
        {
            "before": [ "N" ],
            "commands": [ { "command": "editor.action.previousMatchFindAction" } ]
        },
        {
            "before": [ "n" ],
            "commands": [ { "command": "editor.action.nextMatchFindAction" } ]
        },
        {
            "before": [ "u" ],
            "commands": [
                { "command": "undo" },
                { "command": "extension.vim_escape" }
            ]
        },
        {
            "before": [
                "g",
                ";"
            ],
            "commands": [
                { "command": "workbench.action.navigateToLastEditLocation" },
                { "command": "extension.vim_escape" }
            ]
        },
        {
            "before": [
                "g",
                "B"
            ],
            "commands": [ { "command": "editor.action.selectHighlights" } ]
        },
        {
            "before": [
                "g",
                "D"
            ],
            "commands": [ { "command": "editor.action.referenceSearch.trigger" } ]
        },
        {
            "before": [
                "g",
                "J",
            ],
            "commands": [ { "command": "editor.action.moveLinesDownAction" } ]
        },
        {
            "before": [
                "g",
                "K",
            ],
            "commands": [ { "command": "editor.action.moveLinesUpAction" } ]
        },
        {
            "before": [
                "g",
                "x"
            ],
            "commands": [ { "command": "editor.action.openLink" } ]
        },
        {
            "before": [
                "<leader>",
                "<tab>",
            ],
            "commands": [
                { "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup" },
                { "command": "workbench.action.acceptSelectedQuickOpenItem" },
            ]
        },
        {
            "before": [
                "<leader>",
                ";",
            ],
            "commands": [ { "command": "editor.action.commentLine" } ]
        },
        // NOTE: has been occupied by Vim extension
        // {
        //     "before": [
        //         "<leader>",
        //         "b",
        //     ],
        // },
        {
            "before": [
                "<leader>",
                "e",
                "l"
            ],
            "commands": [ { "command": "workbench.action.problems.focus" } ]
        },
        {
            "before": [
                "<leader>",
                "e",
                "s"
            ],
            "commands": [ { "command": "editor.action.marker.next" } ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "f"
            ],
            "commands": [ { "command": "workbench.action.files.openFile" } ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "n"
            ],
            "commands": [ { "command": "workbench.action.files.newUntitledFile" } ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "y"
            ],
            "commands": [ { "command": "copyRelativeFilePath" } ]
        },
        {
            "before": [
                "<leader>",
                "f",
                "Y"
            ],
            "commands": [ { "command": "workbench.action.files.copyPathOfActiveFile" } ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "b"
            ],
            "commands": [
                { "command": "workbench.action.closeSidebar" },
                { "command": "gitlens.toggleFileBlame" }
            ],
        },
        {
            "before": [
                "<leader>",
                "g",
                "l"
            ],
            "commands": [ { "command": "git-graph.view" }, ],
        },
        {
            "before": [
                "<leader>",
                "g",
                "n"
            ],
            "commands": [ { "command": "multiCommand.goNextChangeAndShow" } ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "p"
            ],
            "commands": [ { "command": "multiCommand.goPreviousChangeAndShow" } ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "t"
            ],
            "commands": [ { "command": "gitlens.diffWithPrevious" } ]
        },
        {
            "before": [
                "<leader>",
                "i",
                "s"
            ],
            "commands": [ { "command": "editor.action.insertSnippet" } ]
        },
        {
            "before": [
                "<leader>",
                "s",
                "f"
            ],
            "commands": [ { "command": "multiCommand.findInCurDir" } ]
        },
        {
            "before": [
                "<leader>",
                "s",
                "p"
            ],
            "commands": [ { "command": "workbench.action.findInFiles" } ] // search.action.openNewEditor
        },
        // NOTE: has been occupied by Vim extension
        // {
        //     "before": [
        //         "<leader>",
        //         "w",
        //     ],
        // },
        {
            "before": [
                "<leader>",
                "x",
                "f"
            ],
            "commands": [ { "command": "editor.action.formatDocument" } ]
        },
    ],
}
